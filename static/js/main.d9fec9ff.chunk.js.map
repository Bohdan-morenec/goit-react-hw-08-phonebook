{"version":3,"sources":["component/header/header.module.scss","options/Pnotify.js","redux/authorization/autorization-operations.js","redux/authorization/authorization-actions.js","redux/contacts/contact-selectors.js","options/Preloader/preloader.module.scss","redux/authorization/authorization-selectors.js","options/Preloader/Preloader.js","Route/privateRoute/privateRoute.js","Route/publicRoute/publicRoute.js","component/header/userIsLogged.js","component/header/UserNotLogged.js","component/header/header.js","App.js","reportWebVitals.js","redux/contacts/contacts-reducer.js","redux/authorization/authorization-reducer.js","redux/store.js","index.js","redux/contacts/contacts-actions.js"],"names":["module","exports","pnotifyError","text","info","title","modules","Map","Confirm","confirm","buttons","primary","click","notice","close","axios","defaults","baseURL","token","headers","common","Authorization","pnotify","status","registrationUser","user","dispatch","a","registrationRequest","post","data","registrationSuccess","response","registrationError","message","login","loginRequest","loginSuccess","loginError","logout","logoutRequest","logoutSuccess","logoutError","currentUser","getState","persistedToken","authorization","currentRequest","get","currentSuccess","currentError","createAction","getContacts","state","contacts","items","getFilter","filter","logger","filteredArrayContact","createSelector","filterValue","toLowerCase","name","includes","getUserInformation","userName","loggerAuthorization","Preloader","className","style","connect","authorizations","Component","component","redirect","routeProps","render","props","to","routoProps","restricted","mapDispatchToProps","contactsItems","styles","nameUser","hederButtonLogout","onClick","UserNotLogged","headerLink","activeClassName","activeLink","UserAction","headerbox","boxLink","PhoneBook","lazy","Register","Login","App","componentDidMount","fallback","path","this","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","itemsReducer","createReducer","fetchСontactSuccess","_","payload","addСontactSuccess","deleteContactSuccess","todo","id","loggerReducer","addContactRequest","aadContactError","deleteContactRequest","deleteContactError","fetchContactRequest","fetchContactError","filterReducer","filterContact","combineReducers","UserInformation","email","error","contactsPersistConfig","key","storage","whitelist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","contactsReducer","persistReducer","authorizationReducer","devTools","process","storePersistor","persistor","persistStore","ReactDOM","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.d9fec9ff.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerbox\":\"header_headerbox__1z4Jp\",\"boxLink\":\"header_boxLink__aVeVe\",\"headerLink\":\"header_headerLink__3scb1\",\"hederButtonLogout\":\"header_hederButtonLogout__N_E5r\",\"nameUser\":\"header_nameUser__TtPPo\",\"activeLink\":\"header_activeLink__eplz9\"};","import { info } from \"@pnotify/core\";\r\nimport \"@pnotify/core/dist/PNotify.css\";\r\nimport \"@pnotify/core/dist/BrightTheme.css\";\r\nimport * as Confirm from \"@pnotify/confirm\";\r\nimport \"@pnotify/confirm/dist/PNotifyConfirm.css\";\r\n\r\nexport const pnotifyError = (text) => {\r\n  info({\r\n    title: \"information\",\r\n    text: text,\r\n    modules: new Map([\r\n      [\r\n        Confirm,\r\n        {\r\n          confirm: true,\r\n          buttons: [\r\n            {\r\n              text: \"Ok\",\r\n              primary: true,\r\n              click: (notice) => {\r\n                notice.close();\r\n              },\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    ]),\r\n  });\r\n};\r\n","import axios from \"axios\";\r\nimport { pnotifyError } from \"../../options/Pnotify\";\r\nimport {\r\n  registrationRequest,\r\n  registrationSuccess,\r\n  registrationError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  currentRequest,\r\n  currentSuccess,\r\n  currentError,\r\n} from \"./authorization-actions\";\r\n\r\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = \"\";\r\n  },\r\n};\r\n\r\nconst pnotify = (status, text) => {\r\n  status === 400 ? pnotifyError(text) : pnotifyError(\"Something went wrong\");\r\n};\r\n\r\nexport const registrationUser = (user) => async (dispatch) => {\r\n  dispatch(registrationRequest());\r\n\r\n  try {\r\n    const { data } = await axios.post(\"/users/signup\", user);\r\n\r\n    token.set(data.token);\r\n\r\n    dispatch(registrationSuccess(data));\r\n  } catch (error) {\r\n    const { status } = error.response;\r\n\r\n    pnotify(status, \"such user already exists\");\r\n\r\n    dispatch(registrationError(error.message));\r\n  }\r\n};\r\n\r\nexport const login = (user) => async (dispatch) => {\r\n  dispatch(loginRequest());\r\n\r\n  try {\r\n    const { data } = await axios.post(\"/users/login\", user);\r\n\r\n    token.set(data.token);\r\n\r\n    dispatch(loginSuccess(data));\r\n  } catch (error) {\r\n    const { status } = error.response;\r\n\r\n    pnotify(\r\n      status,\r\n      \"you entered an incorrect email or password, please try again\"\r\n    );\r\n\r\n    dispatch(loginError(error.message));\r\n  }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n  dispatch(logoutRequest());\r\n\r\n  try {\r\n    await axios.post(\"/users/logout\");\r\n\r\n    token.unset();\r\n\r\n    dispatch(logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(logoutError(error.message));\r\n  }\r\n};\r\n\r\nexport const currentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    authorization: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  dispatch(currentRequest());\r\n\r\n  try {\r\n    token.set(persistedToken);\r\n\r\n    const { data } = await axios.get(\"/users/current\");\r\n\r\n    dispatch(currentSuccess(data));\r\n  } catch (error) {\r\n    dispatch(currentError(error.message));\r\n  }\r\n};\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const registrationRequest = createAction(\r\n  \"authorization/registrationRequest\"\r\n);\r\nexport const registrationSuccess = createAction(\r\n  \"authorization/registrationSuccess\"\r\n);\r\nexport const registrationError = createAction(\r\n  \"authorization/registrationError\"\r\n);\r\n\r\nexport const loginRequest = createAction(\"authorization/loginRequest\");\r\nexport const loginSuccess = createAction(\"authorization/loginSuccess\");\r\nexport const loginError = createAction(\"authorization/loginError\");\r\n\r\nexport const logoutRequest = createAction(\"authorization/logoutRequest\");\r\nexport const logoutSuccess = createAction(\"authorization/logoutSuccess\");\r\nexport const logoutError = createAction(\"authorization/logoutError\");\r\n\r\nexport const currentRequest = createAction(\"authorization/currentRequest\");\r\nexport const currentSuccess = createAction(\"authorization/currentSuccess\");\r\nexport const currentError = createAction(\"authorization/currentError\");\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getContacts = (state) => state.contacts.items;\r\n\r\nexport const getFilter = (state) => state.contacts.filter;\r\n\r\nexport const logger = (state) => state.contacts.logger;\r\n\r\nexport const filteredArrayContact = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const filterValue = filter.toLowerCase();\r\n    const filterText = (value) => value.toLowerCase().includes(filterValue);\r\n\r\n    return contacts.filter(({ name }) => filterText(name));\r\n  }\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Preloader\":\"preloader_Preloader__3GXOB\"};","export const getUserInformation = (state) => state.authorization.authorization;\r\n\r\nexport const userName = (state) => state.authorization.user.name;\r\n\r\nexport const loggerAuthorization = (state) => state.authorization.logger;\r\n","import style from \"./preloader.module.scss\";\r\n\r\nexport const Preloader = () => {\r\n  return (\r\n    <div className={style.Preloader}>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n};\r\n","import { connect } from \"react-redux\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { getUserInformation } from \"../../redux/authorization/authorization-selectors\";\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  authorizations,\r\n  redirect,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={(props) =>\r\n      authorizations ? <Component {...props} /> : <Redirect to={redirect} />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  authorizations: getUserInformation(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import { connect } from \"react-redux\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\n\r\nimport { getUserInformation } from \"../../redux/authorization/authorization-selectors\";\r\n\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  authorizations,\r\n  redirect,\r\n  ...routoProps\r\n}) => (\r\n  <Route\r\n    {...routoProps}\r\n    render={(props) =>\r\n      authorizations && routoProps.restricted ? (\r\n        <Redirect to={redirect} />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  authorizations: getUserInformation(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import { connect } from \"react-redux\";\r\n\r\nimport { userName } from \"../../redux/authorization/authorization-selectors\";\r\nimport { logout } from \"../../redux/authorization/autorization-operations\";\r\n\r\nimport styles from \"./header.module.scss\";\r\n\r\nconst UserLogged = ({ contactsItems, logout }) => {\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h2 className={styles.nameUser}>{contactsItems}</h2>\r\n        <button className={styles.hederButtonLogout} onClick={logout}>\r\n          logout\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contactsItems: userName(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  logout: logout,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserLogged);\r\n","import { NavLink } from \"react-router-dom\";\r\n\r\nimport styles from \"./header.module.scss\";\r\n\r\nconst UserNotLogged = () => {\r\n  return (\r\n    <div>\r\n      <NavLink\r\n        className={styles.headerLink}\r\n        activeClassName={styles.activeLink}\r\n        to=\"/Login\"\r\n      >\r\n        sing in\r\n      </NavLink>\r\n      <NavLink\r\n        className={styles.headerLink}\r\n        activeClassName={styles.activeLink}\r\n        to=\"/register\"\r\n      >\r\n        register\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserNotLogged;\r\n","import { connect } from \"react-redux\";\r\n\r\nimport UserLogged from \"./userIsLogged\";\r\nimport UserNotLogged from \"./UserNotLogged\";\r\nimport { getUserInformation } from \"../../redux/authorization/authorization-selectors\";\r\nimport styles from \"./header.module.scss\";\r\n\r\nconst header = ({ UserAction }) => {\r\n  return (\r\n    <div className={styles.headerbox}>\r\n      <div className={styles.boxLink}>\r\n        {UserAction ? <UserLogged /> : <UserNotLogged />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  UserAction: getUserInformation(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(header);\r\n","import \"./App.css\";\n\nimport { connect } from \"react-redux\";\nimport { logger } from \"./redux/contacts/contact-selectors\";\nimport { loggerAuthorization } from \"./redux/authorization/authorization-selectors\";\nimport { currentUser } from \"./redux/authorization/autorization-operations\";\nimport { Preloader } from \"./options/Preloader/Preloader\";\n\nimport { Switch, Redirect } from \"react-router-dom\";\nimport { Component, Suspense, lazy } from \"react\";\n\nimport PrivateRoute from \"./Route/privateRoute/privateRoute\";\nimport PublicRoute from \"./Route/publicRoute/publicRoute\";\n\nimport UserLogged from \"./component/header/header\";\n\nconst PhoneBook = lazy(() =>\n  import(\"./Route/PhoneBook\" /* webpackChunkName: \"PhoneBook\" */)\n);\n\nconst Register = lazy(() =>\n  import(\"./Route/Register/Register\" /* webpackChunkName: \"Register\" */)\n);\n\nconst Login = lazy(() =>\n  import(\"./Route/SingIn/SingIn\" /* webpackChunkName: \"Login\" */)\n);\n\nclass App extends Component {\n  componentDidMount = () => {\n    this.props.currentUser();\n  };\n\n  render() {\n    return (\n      <div>\n        <UserLogged />\n        <Suspense fallback={<Preloader />}>\n          <Switch>\n            <PublicRoute\n              path=\"/register\"\n              restricted\n              redirect=\"/\"\n              component={Register}\n            />\n            <PublicRoute\n              path=\"/Login\"\n              restricted\n              redirect=\"/\"\n              component={Login}\n            />\n            <PrivateRoute path=\"/\" redirect=\"/Login\" component={PhoneBook} />\n            <Redirect to=\"/login\" />\n          </Switch>\n        </Suspense>\n\n        {this.props.logger && <Preloader />}\n        {this.props.loggerAuthorization && <Preloader />}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  logger: logger(state),\n  loggerAuthorization: loggerAuthorization(state),\n});\n\nconst mapDispatchToProps = {\n  currentUser: currentUser,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\nimport {\r\n  addContactRequest,\r\n  addСontactSuccess,\r\n  aadContactError,\r\n  filterContact,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactRequest,\r\n  fetchСontactSuccess,\r\n  fetchContactError,\r\n} from \"../../redux/contacts/contacts-actions\";\r\n\r\nconst itemsReducer = createReducer([], {\r\n  [fetchСontactSuccess]: (_, { payload }) => payload,\r\n  [addСontactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter((todo) => todo.id !== payload),\r\n});\r\n\r\nconst loggerReducer = createReducer(false, {\r\n  [addContactRequest]: () => true,\r\n  [addСontactSuccess]: () => false,\r\n  [aadContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n  [fetchContactRequest]: () => true,\r\n  [fetchСontactSuccess]: () => false,\r\n  [fetchContactError]: () => false,\r\n});\r\n\r\nconst filterReducer = createReducer(\"\", {\r\n  [filterContact]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n  logger: loggerReducer,\r\n});\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\nimport {\r\n  registrationRequest,\r\n  registrationSuccess,\r\n  registrationError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  currentRequest,\r\n  currentSuccess,\r\n  currentError,\r\n} from \"./authorization-actions\";\r\n\r\nconst UserInformation = { name: \"\", email: \"\" };\r\n\r\nconst user = createReducer(UserInformation, {\r\n  [registrationSuccess]: (_, { payload }) => payload.user,\r\n  [loginSuccess]: (_, { payload }) => payload.user,\r\n  [logoutSuccess]: () => UserInformation,\r\n  [currentSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [registrationSuccess]: (_, { payload }) => payload.token,\r\n  [loginSuccess]: (_, { payload }) => payload.token,\r\n  [logoutSuccess]: () => null,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [registrationError]: (_, { payload }) => payload,\r\n  [loginError]: (_, { payload }) => payload,\r\n  [logoutError]: (_, { payload }) => payload,\r\n  [currentError]: (_, { payload }) => payload,\r\n});\r\n\r\nconst authorization = createReducer(false, {\r\n  [registrationSuccess]: () => true,\r\n  [loginSuccess]: () => true,\r\n  [currentSuccess]: () => true,\r\n  [registrationError]: () => false,\r\n  [loginError]: () => false,\r\n  [logoutError]: () => false,\r\n  [currentError]: () => false,\r\n  [logoutSuccess]: () => false,\r\n});\r\n\r\nconst logger = createReducer(false, {\r\n  [registrationRequest]: () => true,\r\n  [registrationSuccess]: () => false,\r\n  [registrationError]: () => false,\r\n  [loginRequest]: () => true,\r\n  [loginSuccess]: () => false,\r\n  [loginError]: () => false,\r\n  [logoutRequest]: () => true,\r\n  [logoutSuccess]: () => false,\r\n  [logoutError]: () => false,\r\n  [currentRequest]: () => true,\r\n  [currentSuccess]: () => false,\r\n  [currentError]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  token,\r\n  error,\r\n  authorization,\r\n  logger,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\n// import logger from \"redux-logger\";\r\nimport contactsReducer from \"../redux/contacts/contacts-reducer\";\r\nimport authorizationReducer from \"./authorization/authorization-reducer\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\n// import { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst contactsPersistConfig = {\r\n  key: \"token\",\r\n  storage,\r\n  whitelist: [\"token\"],\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  // logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n    authorization: persistReducer(contactsPersistConfig, authorizationReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nconst storePersistor = { store, persistor };\r\n\r\nexport default storePersistor;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store.store}>\n        <PersistGate loading={null} persistor={store.persistor}>\n          <App />\n        </PersistGate>\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const addContactRequest = createAction(\"contact/addContactRequest\");\r\nexport const addСontactSuccess = createAction(\"contact/addСontactSuccess\");\r\nexport const aadContactError = createAction(\"contact/aadContactError\");\r\n\r\nexport const deleteContactRequest = createAction(\r\n  \"contact/deleteContactRequest\"\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  \"contact/deleteContactSuccess\"\r\n);\r\nexport const deleteContactError = createAction(\"contact/deleteContactError\");\r\n\r\nexport const fetchContactRequest = createAction(\"contact/fetchContactRequest\");\r\nexport const fetchСontactSuccess = createAction(\"contact/fetchСontactSuccess\");\r\nexport const fetchContactError = createAction(\"contact/fetchContactError\");\r\n\r\nexport const filterContact = createAction(\"filterContact\");\r\n"],"sourceRoot":""}